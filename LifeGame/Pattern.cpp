//========================================
//      ライフゲーム:パターン
//========================================
#include "Pattern.h"
#include "Utility.h"
#include <stdio.h>

static bool _block[4][4] = {
	{0,0,0,0},
	{0,1,1,0},
	{0,1,1,0},
	{0,0,0,0},
};
static bool _tab[5][5] = {
	{0,0,0,0,0},
	{0,0,1,0,0},
	{0,1,0,1,0},
	{0,0,1,0,0},
	{0,0,0,0,0},
};
static bool _boat[5][5] = {
	{0,0,0,0,0},
	{0,1,1,0,0},
	{0,1,0,1,0},
	{0,0,1,0,0},
	{0,0,0,0,0},
};
static bool _snake[4][6] = {
	{0,0,0,0,0,0},
	{0,1,1,0,1,0},
	{0,1,0,1,1,0},
	{0,0,0,0,0,0},
};

static bool _ship[5][5] = {
	{0,0,0,0,0},
	{0,1,1,0,0},
	{0,1,0,1,0},
	{0,0,1,1,0},
	{0,0,0,0,0},
};

static bool _aircarrier[5][6] = {
	{0,0,0,0,0,0},
	{0,1,1,0,0,0},
	{0,1,0,0,1,0},
	{0,0,0,1,1,0},
	{0,0,0,0,0,0},
};
static bool _beehive[5][6] = {
	{0,0,0,0,0,0},
	{0,0,1,1,0,0},
	{0,1,0,0,1,0},
	{0,0,1,1,0,0},
	{0,0,0,0,0,0},
};

static bool _barge[6][6] = {
	{0,0,0,0,0,0},
	{0,0,1,0,0,0},
	{0,1,0,1,0,0},
	{0,0,1,0,1,0},
	{0,0,0,1,0,0},
	{0,0,0,0,0,0},
};
static bool _pond[6][6] = {
	{0,0,0,0,0,0},
	{0,0,1,1,0,0},
	{0,1,0,0,1,0},
	{0,1,0,0,1,0},
	{0,0,1,1,0,0},
	{0,0,0,0,0,0},
};

static bool _blinker[5][5] = {
	{0,0,0,0,0},
	{0,0,1,0,0},
	{0,0,1,0,0},
	{0,0,1,0,0},
	{0,0,0,0,0},
};
//static bool _blinker2[5][5] = {
//	{0,0,0,0,0},/
//	{0,0,0,0,0},
//	{0,1,1,1,0},
//	{0,0,0,0,0},
//	{0,0,0,0,0},
//};
static bool _flog[6][6] = {
	{0,0,0,0,0,0},
	{0,0,0,0,0,0},
	{0,0,1,1,1,0},
	{0,1,1,1,0,0},
	{0,0,0,0,0,0},
	{0,0,0,0,0,0},
};

static bool _beecon[6][6] = {
	{0,0,0,0,0,0},
	{0,1,1,0,0,0},
	{0,1,1,0,0,0},
	{0,0,0,1,1,0},
	{0,0,0,1,1,0},
	{0,0,0,0,0,0},
};
static bool _clock[6][6] = {
	{0,0,0,0,0,0},
	{0,0,1,0,0,0},
	{0,0,0,1,1,0},
	{0,1,1,0,0,0},
	{0,0,0,1,0,0},
	{0,0,0,0,0,0},
};
static bool _pulsar[17][17] = {
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
	{0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
	{0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
	{0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
	{0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
	{0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
	{0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
static bool _octagon [10][10] = {
	{0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0},
	{0,0,0,1,0,0,1,0,0,0},
	{0,0,1,0,1,1,0,1,0,0},
	{0,0,0,1,0,0,1,0,0,0},
	{0,0,0,1,0,0,1,0,0,0},
	{0,0,1,0,1,1,0,1,0,0},
	{0,0,0,1,0,0,1,0,0,0},
	{0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0},
};

static bool _galaxy[15][15] = {
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,1,1,0,1,1,1,1,1,1,0,0,0},
	{0,0,0,1,1,0,1,1,1,1,1,1,0,0,0},
	{0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
	{0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
	{0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
	{0,0,0,1,1,1,1,1,1,0,1,1,0,0,0},
	{0,0,0,1,1,1,1,1,1,0,1,1,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
static bool _pentadecathlon[18][11] = {
	{0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,1,0,0,0,0,0},
	{0,0,0,0,0,1,0,0,0,0,0},
	{0,0,0,0,1,0,1,0,0,0,0},
	{0,0,0,0,0,1,0,0,0,0,0},
	{0,0,0,0,0,1,0,0,0,0,0},
	{0,0,0,0,0,1,0,0,0,0,0},
	{0,0,0,0,0,1,0,0,0,0,0},
	{0,0,0,0,1,0,1,0,0,0,0},
	{0,0,0,0,0,1,0,0,0,0,0},
	{0,0,0,0,0,1,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0},
};

static bool _r_pentomono[5][5] = {
	{0,0,0,0,0},
	{0,0,1,1,0},
	{0,1,1,0,0},
	{0,0,1,0,0},
	{0,0,0,0,0},
};

static bool _diehard[5][10] = {
	{0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,1,0,0},
	{0,1,1,0,0,0,0,0,0,0},
	{0,0,1,0,0,0,1,1,1,0},
	{0,0,0,0,0,0,0,0,0,0},
};

static bool _acorn[5][9] = {
	{0,0,0,0,0,0,0,0,0},
	{0,0,1,0,0,0,0,0,0},
	{0,0,0,0,1,0,0,0,0},
	{0,1,1,0,0,1,1,1,0},
	{0,0,0,0,0,0,0,0,0},
};
static bool _glider[6][6] = {
	{0,0,0,0,0,0},
	{0,0,1,0,0,0},
	{0,0,0,1,0,0},
	{0,1,1,1,0,0},
	{0,0,0,0,0,0},
	{0,0,0,0,0,0},
};
static bool _lightship[7][9] = {
	{0,0,0,0,0,0,0,0,0},
	{0,1,0,0,1,0,0,0,0},
	{0,0,0,0,0,1,0,0,0},
	{0,1,0,0,0,1,0,0,0},
	{0,0,1,1,1,1,0,0,0},
	{0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0},
};
static Pattern patterns[] = {
	// 固定物体
	{4,4,(bool*)_block,"ブロック"},
	{5,5,(bool*)_tab,"タブ"},
	{5,5,(bool*)_boat,"ボート"},
	{6,4,(bool*)_snake,"へび"},
	{5,5,(bool*)_ship,"船"},
	{6,5,(bool*)_aircarrier,"空母"},
	{6,5,(bool*)_beehive,"蜂の巣"},
	{6,6,(bool*)_barge,"はしけ"},
	{6,6,(bool*)_pond,"池"},
	// 振動子
	{5,5,(bool*)_blinker,"ブリンカー"},
	{6,6,(bool*)_flog,"ヒキガエル"},
	{6,6,(bool*)_beecon,"ビーコン"},
	{6,6,(bool*)_clock,"時計"},
	// パルサー
	{17,17,(bool*)_pulsar,"パルサー"},
	// 八角形
	{10,10,(bool*)_octagon,"八角形"},
	{15,15,(bool*)_galaxy,"銀河"},
	{11,18,(bool*)_pentadecathlon,"ペンタデカスロン"},
	{5,5,(bool*)_r_pentomono,"Rペントミノ"},
	{10,5,(bool*)_diehard,"ダイ・ハード" },
	{9,5,(bool*)_acorn,"どんぐり"},
	{6,6,(bool*)_glider,"グライダー"},
	{9,7,(bool*)_lightship,"軽量宇宙船"},
};

const int patternSize = sizeof(patterns) / sizeof(patterns[0]);
static int sel = 0;

Pattern* SelectPattern()
{
	while (true) {
		ClearScreen();
		for (int i = 0; i < patternSize; i++) {
			const char* cur = (sel == i) ? "＞" : "　";
			printf("%s%s\n", cur, patterns[i].name);
		}
		switch (GetKey()) {
		case ARROW_UP:
			sel--;
			if (sel < 0) {
				sel = patternSize - 1;
			}
			break;
		case ARROW_DOWN:
			sel++;
			if (sel >= patternSize) {
				sel = 0;
			}
			break;
		case DECIDE:
			return &patterns[sel];
		case ESC:
			return nullptr;
		}
	}
}


